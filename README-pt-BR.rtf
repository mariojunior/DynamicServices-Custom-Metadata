{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Verdana;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red153\green0\blue0;\red0\green102\blue51;
\red128\green0\blue0;\red63\green95\blue191;\red0\green51\blue255;\red153\green0\blue204;\red51\green153\blue102;
\red0\green153\blue0;\red102\green153\blue204;\red0\green0\blue0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid402\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww22200\viewh12760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs32 \cf0 Instru\'e7\'f5es sobre a [DynamicService] Metadata
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 A id\'e9ia, originalmente, \'e9 de Marty Piller (@
\f1\fs24 marty_pitt
\f0\fs32 ), descrita em seu blog:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://martypitt.wordpress.com/2011/07/18/a-new-parsley-extension-the-tag/"}}{\fldrslt \cf0 http://martypitt.wordpress.com/2011/07/18/a-new-parsley-extension-the-tag/}}\
\
\'c9 extremamente recomendada a leitura do post para compreender o prop\'f3sito dessa solu\'e7\'e3o.\
\
\

\b Instru\'e7\'f5es sobre o uso:
\b0 \

\b 1) A Configura\'e7\'e3o no Swiz:
\b0 \
Primeiramente, declara-se um objeto do tipo DynamicServiceSetup que ir\'e1 guardar o endere\'e7o de nossos endPoints.\
Ap\'f3s isso, declarar a DynamicServiceMetadataProcessor dentro de <customProcessors>, ligando o atributo "setup" ao objeto de Setup criado e declarado anteriormente por databinding.\
\
Segue exemplo abaixo:\
\
\pard\pardeftab720

\f2\fs26 \cf2 <swiz:Swiz\cf0  xmlns:swiz="\cf3 http://swiz.swizframework.org\cf0 " \'85 >\cf4 \
	\
	<fx:Declarations>\cf0 \
		\cf2 <setup:DynamicServiceSetup\cf0  id="\cf3 _setup\cf0 "\
				endPoint="\cf3 http://localhost:8080/SampleDynamicWebProject/messagebroker/amf\cf0 "\
				wsdlEndPoint="\cf3 http://localhost:8080/SampleWebServiceProject/endpoint?wsdl\cf0 "\cf2 />\cf0 \
\pard\pardeftab720
\cf4 	</fx:Declarations>
\f0\fs32 \cf0 \
\
\pard\pardeftab720

\f2\fs26 \cf2 	<swiz:customProcessors>\cf0 \
		\cf5 <!-- Here, our custom metadata processor -->\cf0 \
		\cf2 <processor:DynamicServiceMetadataProcessor\cf0  setup="\cf3 \{\cf0 _setup\cf3 \}\cf0 " \cf2 />\cf0 \
\cf2 	</swiz:customProcessors>
\f0\fs32 \cf0 \

\f2\fs26 \cf2 \
\pard\pardeftab720\ql\qnatural
\cf2 </swiz:Swiz>
\f0\fs32 \cf0 \
\pard\pardeftab720
\cf0 \

\b 2) A Defini\'e7\'e3o de Contrato dos Servi\'e7os:
\b0 \
Primeiramente, como descrito na ideia original de Marty, \'e9 preciso criar uma Inteface (OO, nao \'e9 uma 'View') que servir\'e1 como contrato para os m\'e9todos de servi\'e7os:\
\pard\pardeftab720

\f2\fs26 \cf6 /**\cf0 \
\cf6  * This interface defines a back-end service contract.\cf0 \
\cf6  */ 
\f0\fs32 \cf0 \
\pard\pardeftab720

\f2\fs26 \cf7 public\cf0  \cf8 interface\cf0  IPessoaService\
\{\
	\cf9 function\cf0  getPerson(id:int):AsyncToken;\
	\cf9 function\cf0  listPersons():AsyncToken;\
	\cf9 function\cf0  savePerson(p:Object):AsyncToken; \cf10 //p would be a Person Value Object concrete class, no problem for that :)\cf0 \
	\cf10 //...and all other methods about PersonService context.\cf0 \
	\cf10 //Generally, this interface could be a 'copy' of your services back-end classes\cf0 		\
\}
\f0\fs32 \
\
\pard\pardeftab720

\b \cf0 3) O uso da Metadata
\b0 \
Com o contrato definido, basta declarar em seus controllers os atributos que usar\'e3o esse contrato anotados com a metadata [DynamicService]:\
\
\pard\pardeftab720\ql\qnatural

\f2\fs26 \cf6 /**\cf0 \
\cf6  * This class is a simple controller\cf0 \
\cf6  */ 
\f0\fs32 \cf0 \
\pard\pardeftab720

\f2\fs26 \cf7 public\cf0  \cf8 class\cf0  ExampleController\
\{\
	[\cf7 Inject\cf0 ]\
	\cf7 public\cf0  \cf11 var\cf0  serviceHelper : ServiceHelper;\
\
\pard\pardeftab720

\f0\fs32 \cf0 	
\f2\fs26 [\cf7 DynamicService\cf0 (destination=\cf3 "PessoaService"\cf0 )]
\f0\fs32 \
\pard\pardeftab720

\f2\fs26 \cf7 	public\cf0  \cf11 var\cf0  service : IPessoaService;\
\
	[\cf7 EventHandler\cf0 (event=\cf3 "PessoaEvent.GET_PERSON"\cf0 , properties=\cf3 "id"\cf0 )]\
	\cf7 public\cf0  \cf9 function\cf0  invokeGetPerson(id:int):\cf7 void\cf0 \
	\{\
		serviceHelper.executeServiceCall(service.getPerson(id), getPersonResultHandler, defaultFaultHandler);\
	\}\
\
\pard\pardeftab720\ql\qnatural
\cf0 	\cf10 //... getPersonResultHandler and defaultFaultHandler omitted for convenience
\f0\fs32 \cf0 \

\f2\fs26 \}
\f0\fs32 \
\pard\pardeftab720
\cf0 \
Nesse casso, o atributo 
\i _service
\i0  ser\'e1 uma classe concreta (criada, definida, anexada ao swf e inicializada em runtime) que implementa a interface 
\i IPessoaService
\i0  e, ao acessar o m\'e9todo 
\i getPerson(id),
\i0  um 
\i <s:RemoteObject/>
\i0  ser\'e1 criado em runtime invocando exatamente o mesmo m\'e9todo (
\i getPerson(id)
\i0 ) do destination 
\i PessoaService
\i0  de seu back-end, devolvendo um 
\i AsyncToken
\i0  v\'e1lido para tratar os resultados.\
\
Com isso, voc\'ea n\'e3o precisa mais definir explicitamente seus <s:RemoteObjects/> em seus BeanProvider. \
Trocamos o:\
\pard\pardeftab720

\f2\fs26 \cf2 <s:RemoteObject\cf0  id="\cf3 pessoaService\cf0 "\
			   destination="\cf3 PessoaService\cf0 "\
			   endpoint="\cf3 http://server:port/context/messagebroker/amf\cf0 " \cf2 />
\f0\fs32 \cf0 \
Por isso:\
\pard\pardeftab720\ql\qnatural

\f2\fs26 \cf0 [\cf7 DynamicService\cf0 (destination=\cf3 "PessoaService"\cf0 )]
\f0\fs32 \
\pard\pardeftab720\ql\qnatural

\f2\fs26 \cf7 public\cf0  \cf11 var\cf0  service : IPessoaService;\
\
\pard\pardeftab720\ql\qnatural

\f0\fs32 \cf0 Ou, se quiser, voc\'ea tamb\'e9m pode usar a [DynamicService] metadata em setter functions:
\f2\fs26 \
\pard\pardeftab720
\cf0 [\cf7 DynamicService\cf0 (destination=\cf3 "PessoaService"\cf0 )]\
\pard\pardeftab720
\cf7 public\cf0  \cf9 function\cf0  \cf7 set\cf0  service(value:IPessoaService):\cf7 void\cf0 \
\{\
	_service = value; \cf10 //onde _service \'e9 um atributo privado do tipo IPessoaService\cf0 \
\}\
\pard\pardeftab720

\f0\fs32 \cf0 \
Lembrando que a configura\'e7\'e3o de 
\i endpoint
\i0  \'e9 a mesma para todos os servi\'e7os, e ela j\'e1 fora definida pela 
\f2\fs26 \cf2 <setup:DynamicServiceSetup\cf0  id="\cf3 _setup\cf0 " .../>
\fs28  
\f0\fs32 na configura\'e7\'e3o do 
\i Swiz
\i0 , logo no in\'edcio da aplica\'e7\'e3o.\
\
\pard\pardeftab720\ql\qnatural

\b \cf0 4) [DynamicService] Metadata Arguments:\
\pard\pardeftab720\ql\qnatural

\b0 \cf0 A metadata possui a seguinte assinatura: 
\f2\fs26 [\cf7 DynamicService\cf0 (destination:String, type:String="\cf3 remoteObject\cf0 ")] 
\f0\fs32 onde:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}type (String): Por padr\'e3o, 
\i type 
\i0 \'e9 sempre um "
\f2\fs26 \cf3 remoteObject
\f0\fs32 \cf0 " caso seja omitido. Demais valores v\'e1lidos s\'e3o:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\ql\qnatural
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\f2\fs26 \cf3 httpRequest 
\f0\fs32 \cf12 : Significa que um <s:HttpService /> ser\'e1 gerado em runtime.
\f2\fs26 \cf3 \
\ls1\ilvl1
\f0\fs32 \cf0 {\listtext	\uc0\u8259 	}
\f2\fs26 \cf3 webService 
\f0\fs32 \cf12 : Significa que um <s:WebService/> ser\'e1 gerado em runtime.
\f2\fs26 \cf3 \
\ls1\ilvl1
\f0\fs32 \cf0 {\listtext	\uc0\u8259 	}
\f2\fs26 \cf3 mock 
\f0\fs32 \cf12 : Significa quem um bean 'mock' ser\'e1 injetado na vari\'e1vel.
\f2\fs26 \cf3 \
\ls1\ilvl1
\f0\fs32 \cf0 {\listtext	\uc0\u8259 	}(Padr\'e3o) 
\f2\fs26 \cf3 remoteObject
\f0\fs32 \cf12 : Significa que um <s:RemoteObject/> ser\'e1 gerado em runtime.\cf0 \
\pard\tx560\pardeftab720\ql\qnatural
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}destination (String) : Obrigat\'f3ria Aponta o "destino" de origem. Esse argumento depende do valor do argumento "type" (Lembre-se que se "type" nao for especificado, o valor default \'e9 "remoteObject"):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\ql\qnatural
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}Se "type" for 
\f2\fs26 \cf3 remoteObject
\f0\fs32 \cf0  voc\'ea precisa especificar a classe remota de Servi\'e7o do Back-end.\
{\listtext	\uc0\u8259 	}Se "type" for 
\f2\fs26 \cf3 httpRequest
\f0\fs32 \cf0  voc\'ea precisa especificar a URL para post/get de dados.
\f2\fs26 \cf3 \
\ls2\ilvl1
\f0\fs32 \cf0 {\listtext	\uc0\u8259 	}Se "type" for 
\f2\fs26 \cf3 webService
\f0\fs32 \cf0  voc\'ea precisa especificar a opera\'e7\'e3o (operation)  do WebService que ser\'e1 consumido.
\f2\fs26 \cf3 \
\ls2\ilvl1
\f0\fs32 \cf0 {\listtext	\uc0\u8259 	}Se "type" for 
\f2\fs26 \cf3 mock 
\f0\fs32 \cf0 voc\'ea precisa especificar o 
\i id
\i0  de um objeto mock declarado em seu BeanProvider.
\f2\fs26 \cf3 \
\pard\tx560\tx1120\pardeftab720\ql\qnatural

\f0\fs32 \cf0 \

\b 5) Boas pr\'e1ticas e recomenda\'e7\'f5es\
\pard\tx220\tx720\tx1120\pardeftab720\li720\fi-720\ql\qnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}Um contrato (Interface) para cada Servi\'e7o: 
\b0 A princ\'edpio, \'e9 poss\'edvel criar uma \'fanica Interface como contrato onde voc\'ea definiria todos os m\'e9todos de todas as classes de seus servi\'e7os back-end, mas n\'e3o recomendo adotarem essa pr\'e1tica. Esse tipo de generaliza\'e7\'e3o mais atrapalha do que ajuda.\
\pard\tx560\tx1120\pardeftab720\ql\qnatural
\cf0 \
\pard\tx220\tx720\tx1120\pardeftab720\li720\fi-720\ql\qnatural
\ls4\ilvl0\cf0 {\listtext	\'95	}
\b Nao misture os Servi\'e7os: 
\b0 Crie contratos (interfaces) isolados para as opera\'e7\'f5es de "RemoteObject", "HttpService", "WebServices". Teoricamente \'e9 poss\'edvel reaproveitar o mesmo contrato, mas ainda n\'e3o implementei isso (falta de tempo).\
\pard\tx560\tx1120\pardeftab720\ql\qnatural
\cf0 \

\b 6) Depend\'eancias\

\b0 Para a [DynamicService] Metadata funcionar adequadamente, \'e9 preciso adicionar as seguintes libraries ao seu projeto:\
\pard\tx220\tx720\tx1120\pardeftab720\li720\fi-720\ql\qnatural
\ls5\ilvl0\cf0 {\listtext	\'95	}Swiz Framework vers\'e3o 1.1 ou superior (www.swizframework.com)\
{\listtext	\'95	}AS3Commons: {\field{\*\fldinst{HYPERLINK "http://www.as3commons.org/"}}{\fldrslt http://www.as3commons.org/}}\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\ql\qnatural
\ls5\ilvl1\cf0 {\listtext	\uc0\u8259 	}as3-commons-bytecode-1.0-RC3.swc (ou superior);\
{\listtext	\uc0\u8259 	}as3-commons-collections-1.3.0.swc (ou superior);\
{\listtext	\uc0\u8259 	}as3-commons-lang-0.3.4.swc (ou superior);\
{\listtext	\uc0\u8259 	}as3-commons-logging-2.0.swc (ou superior);\
{\listtext	\uc0\u8259 	}as3-commons-reflect-1.3.4.swc (ou superior);\
\pard\tx560\tx1120\pardeftab720\ql\qnatural
\cf0 \
\

\b 7) Author
\b0 \
Mario Junior\
contact@mariojunior.com\
mario.junior@dclick.com.br\
http://blog.mariojunior.com\
@mariojunior\
\
\
}